{"ast":null,"code":"var _jsxFileName = \"/Users/jinwoojeon/Dev/Project/shortYoutubeProject/2-Shorts/client/src/views/components/SignupPage/SignupPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignupPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignupPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SignupPage;\n\nfunction InputForm() {\n  _s();\n\n  // id \n  let [inId, setInId] = useState(\"input@email.com\");\n  const [idLength, setIdLength] = useState(320); // 아이디(이메일) 최대 길이\n  // password\n\n  let [inPswd, setInPswd] = useState(\"\");\n  const [pswdLength, setPswdLength] = useState(20); // 비밀번호 최대 길이\n  // name\n\n  let [inName, setInName] = useState(\"이곳에 이름을 입력해주세요.\");\n  const [nameLength, setNameLength] = useState(20); // 이름 최대 길이\n\n  let [sltIdResult, setSltIdResult] = useState(0); // id 조회 결과 \n  // 0 : 중복검사 미실시\n  // 1 : 중복\n  // 2 : 중복없음 >>> 가능\n\n  let [pswdResult, setPswdResult] = useState(\"\"); // 비밀번호 양식 검사 결과 \n\n  let [formResult, setFormResult] = useState(0); // form 양식 검사 결과 \n  // 0 : 검사 미실시\n  // 1 : 검사 결과 불통과\n  // 2 : 검사 결과 통과 \n  // form 양식을 검사하는 함수 \n\n  function chkForm() {\n    return;\n  }\n  /* db 에 id를 조회해 id 검색결과를 반환해 주는 함수 */\n\n\n  function selectId() {\n    return;\n  }\n\n  function ifChange(e) {\n    console.log(e.target);\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InputFom\",\n    children: [\"id (email) : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"inputId\",\n      type: \"email\",\n      onChange: ifChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 26\n    }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: selectId(),\n      children: \"check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 79\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 85\n    }, this), \"password : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"inputPassword\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 70\n    }, this), \"비밀번호 검사 결과\", \"(\\uBE44\\uBC00\\uBC88\\uD638 \\uC81C\\uC57D\\uC870\\uAC74)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 31\n    }, this), \"name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"inputName\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 62\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 68\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: \"Enroll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: \"Cancle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputForm, \"esGuHd78BJktJsP/tlCCDssOV40=\");\n\n_c2 = InputForm;\nexport default SignupPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignupPage\");\n$RefreshReg$(_c2, \"InputForm\");","map":{"version":3,"sources":["/Users/jinwoojeon/Dev/Project/shortYoutubeProject/2-Shorts/client/src/views/components/SignupPage/SignupPage.js"],"names":["React","useEffect","useState","SignupPage","InputForm","inId","setInId","idLength","setIdLength","inPswd","setInPswd","pswdLength","setPswdLength","inName","setInName","nameLength","setNameLength","sltIdResult","setSltIdResult","pswdResult","setPswdResult","formResult","setFormResult","chkForm","selectId","ifChange","e","console","log","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nfunction SignupPage() {\n\n    return (\n        <div className=\"SignupPage\">\n            <br />\n            <InputForm />\n            <br />\n        </div>\n    );\n}\n\nfunction InputForm(){\n\n    // id \n    let [ inId , setInId] = useState(\"input@email.com\");\n    const [ idLength , setIdLength ] = useState(320); // 아이디(이메일) 최대 길이\n\n    // password\n    let [ inPswd , setInPswd ] = useState(\"\");\n    const [ pswdLength , setPswdLength ] = useState(20); // 비밀번호 최대 길이\n\n    // name\n    let [ inName , setInName ] = useState(\"이곳에 이름을 입력해주세요.\");\n    const [ nameLength , setNameLength ] = useState(20); // 이름 최대 길이\n\n\n    let [ sltIdResult, setSltIdResult ] = useState(0); // id 조회 결과 \n    // 0 : 중복검사 미실시\n    // 1 : 중복\n    // 2 : 중복없음 >>> 가능\n\n    let [ pswdResult, setPswdResult ] = useState(\"\"); // 비밀번호 양식 검사 결과 \n\n\n    let [ formResult, setFormResult ] = useState(0); // form 양식 검사 결과 \n    // 0 : 검사 미실시\n    // 1 : 검사 결과 불통과\n    // 2 : 검사 결과 통과 \n\n    // form 양식을 검사하는 함수 \n    function chkForm(){\n\n\n        return ;\n    }\n\n    /* db 에 id를 조회해 id 검색결과를 반환해 주는 함수 */\n    function selectId(){\n\n        return ;\n    }\n\n    function ifChange(e){\n        console.log(e.target)\n        return;\n    }\n\n\n    return(\n        <div className=\"InputFom\">\n            id (email) : <input id='inputId' type='email' onChange={ ifChange }></input>&nbsp;&nbsp;\n            <button type='button' onClick={ selectId() } >{ \"check\" }</button><br /><br />\n            password : <input id='inputPassword' type='text'></input><br />{\"비밀번호 검사 결과\" }\n            (비밀번호 제약조건)<br /> <br />\n            name : <input id='inputName' type='text'></input><br /><br />\n\n            <button type='button' >{ \"Enroll\" }</button>&nbsp;&nbsp;&nbsp;&nbsp;\n            <button type='button' >{ \"Cancle\" }</button>\n        </div>\n    );\n}\n\n\n\nexport default SignupPage;"]},"metadata":{},"sourceType":"module"}